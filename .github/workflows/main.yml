name: Express MongoDB CI/CD

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  MONGODB_URI: mongodb://mongo:27017/test
  NODE_ENV: test
  PORT: 3500

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test Docker image
        run: |
          docker-compose build
          docker-compose up -d
          docker-compose exec -T app npm test
          docker-compose down

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: franszalukhu/task-5-productzilla-app:latest

      - name: Deploy to production
        run: |
          echo "Deployment step - add your deployment commands here"
          # Contoh deployment ke server menggunakan Docker:
          # - name: Deploy to VPS
          #   uses: appleboy/ssh-action@master
          #   with:
          #     host: ${{ secrets.HOST }}
          #     username: ${{ secrets.USERNAME }}
          #     key: ${{ secrets.SSH_KEY }}
          #     script: |
          #       docker pull yourusername/yourapp:latest
          #       docker-compose -f docker-compose.prod.yml up -d
